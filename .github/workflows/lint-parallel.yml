name: Parallel Lint

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Ruby linting with RuboCop
  rubocop:
    name: RuboCop (Ruby)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.1'
          bundler-cache: true

      - name: Cache RuboCop
        uses: actions/cache@v4
        with:
          path: ~/.cache/rubocop
          key: ${{ runner.os }}-rubocop-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-rubocop-

      - name: Run RuboCop
        run: bundle exec rubocop --format=progress

  # Security analysis with Brakeman
  brakeman:
    name: Brakeman (Security)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.1'
          bundler-cache: true

      - name: Run Brakeman
        run: bundle exec brakeman --quiet --format=json

  # ERB template linting
  erb-lint:
    name: ERB Lint (Templates)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.1'
          bundler-cache: true

      - name: Cache ERB Lint
        uses: actions/cache@v4
        with:
          path: ~/.cache/erb_lint
          key: ${{ runner.os }}-erb-lint-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-erb-lint-

      - name: Run ERB Lint
        run: bundle exec erb_lint --lint-all --format=compact

  # JavaScript linting with ESLint
  eslint:
    name: ESLint (JavaScript)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint:js

  # Summary job that runs after all linters complete
  lint-summary:
    name: Lint Summary
    runs-on: ubuntu-latest
    needs: [rubocop, brakeman, erb-lint, eslint]
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.1'
          bundler-cache: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          bundle install --jobs 4 --retry 3
          npm ci

      - name: Run unified linter
        run: ./bin/lint
        continue-on-error: true

      - name: Check results
        run: |
          echo "## Lint Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Linter | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|--------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| RuboCop | ${{ needs.rubocop.result == 'success' && '✅ Pass' || '❌ Fail' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Brakeman | ${{ needs.brakeman.result == 'success' && '✅ Pass' || '❌ Fail' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| ERB Lint | ${{ needs.erb-lint.result == 'success' && '✅ Pass' || '❌ Fail' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| ESLint | ${{ needs.eslint.result == 'success' && '✅ Pass' || '❌ Fail' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Run locally:**" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "./bin/lint          # Run all linters" >> $GITHUB_STEP_SUMMARY
          echo "./bin/lint --fix    # Auto-fix issues" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const rubocopStatus = '${{ needs.rubocop.result }}' === 'success' ? '✅' : '❌';
            const brakemanStatus = '${{ needs.brakeman.result }}' === 'success' ? '✅' : '❌';
            const erbLintStatus = '${{ needs.erb-lint.result }}' === 'success' ? '✅' : '❌';
            const eslintStatus = '${{ needs.eslint.result }}' === 'success' ? '✅' : '❌';
            
            const allPassed = rubocopStatus === '✅' && brakemanStatus === '✅' && erbLintStatus === '✅' && eslintStatus === '✅';
            const statusEmoji = allPassed ? '✅' : '❌';
            const statusText = allPassed ? 'All linters passed!' : 'Some linters found issues';
            
            const comment = `## ${statusEmoji} Lint Results
            
            ${statusText}
            
            | Linter | Status |
            |--------|--------|
            | 🔍 RuboCop (Ruby) | ${rubocopStatus} |
            | 🔒 Brakeman (Security) | ${brakemanStatus} |
            | 📄 ERB Lint (Templates) | ${erbLintStatus} |
            | ⚡ ESLint (JavaScript) | ${eslintStatus} |
            
            **Run locally:**
            \`\`\`bash
            ./bin/lint          # Run all linters
            ./bin/lint --fix    # Auto-fix issues
            \`\`\`
            
            Check the [Actions tab](https://github.com/${context.repo.owner}/${context.repo.repo}/actions) for detailed results.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  # Fail the workflow if any linter fails
  lint-check:
    name: Lint Check
    runs-on: ubuntu-latest
    needs: [rubocop, brakeman, erb-lint, eslint]
    if: always()
    
    steps:
      - name: Check lint results
        run: |
          if [ "${{ needs.rubocop.result }}" != "success" ] || 
             [ "${{ needs.brakeman.result }}" != "success" ] || 
             [ "${{ needs.erb-lint.result }}" != "success" ] || 
             [ "${{ needs.eslint.result }}" != "success" ]; then
            echo "One or more linters failed. Please fix the issues and try again."
            exit 1
          else
            echo "All linters passed successfully!"
          fi
